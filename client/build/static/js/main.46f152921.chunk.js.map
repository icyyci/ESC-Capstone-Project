{"version":3,"sources":["Components/FormRequestDetails.js","Components/Confirm.js","Components/UserForm.js","App.js","serviceWorker.js","index.js"],"names":["FormRequestDetails","continue","e","preventDefault","props","nextStep","this","values","handleChange","Fragment","Dialog","open","fullWidth","maxWidth","AppBar","TextField","placeholder","label","onChange","defaultValue","typeOfPrototype","margin","showcaseSpaceNeeded","dimensionOfPrototype","noOfPowerPoints","pedestals","otherRequests","Button","color","variant","onClick","Component","console","log","url","window","location","host","axios","post","then","response","data","catch","err","back","prevStep","List","ListItem","ListItemText","primary","secondary","UserForm","state","step","setState","input","target","value","buttonClick","Confirm","App","className","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.46f15292.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport App from '../App';\r\n\r\nexport class FormRequestDetails extends Component {\r\n    continue = e => {\r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n    }\r\n\r\n    render() {\r\n        const { values,handleChange } = this.props;\r\n        return (\r\n            <MuiThemeProvider >\r\n              <React.Fragment>\r\n                <Dialog \r\n                  open=\"true\"\r\n                  fullWidth=\"true\"\r\n                  maxWidth='sm'\r\n                >\r\n                  <AppBar>Enter Request Details</AppBar>\r\n                  <TextField\r\n                    placeholder=\"Enter the type of prototype\"\r\n                    label=\"Type of Prototype\"\r\n                    onChange={handleChange('typeOfPrototype')}\r\n                    defaultValue={values.typeOfPrototype}\r\n                    margin=\"normal\"\r\n                    fullWidth=\"true\"\r\n                  />\r\n                  <br />\r\n                  <TextField\r\n                    placeholder=\"Enter the required space for showcase\"\r\n                    label=\"length x wdith (m)\"\r\n                    onChange={handleChange('showcaseSpaceNeeded')}\r\n                    defaultValue={values.showcaseSpaceNeeded}\r\n                    margin=\"normal\"\r\n                    fullWidth=\"true\"\r\n                  />\r\n                  <br />\r\n                  <TextField\r\n                    placeholder=\"Enter the physical dimension of prototype\"\r\n                    label=\"length x width x height (m)\"\r\n                    onChange={handleChange('dimensionOfPrototype')}\r\n                    defaultValue={values.dimensionOfPrototype}\r\n                    margin=\"normal\"\r\n                    fullWidth=\"true\"\r\n                  />\r\n                  <br />\r\n                  <TextField\r\n                    placeholder=\"Enter the number of power points needed\"\r\n                    label=\"integer number e.g 3\"\r\n                    onChange={handleChange('noOfPowerPoints')}\r\n                    defaultValue={values.noOfPowerPoints}\r\n                    margin=\"normal\"\r\n                    fullWidth=\"true\"\r\n                  />\r\n                  <br />\r\n                  <TextField\r\n                    placeholder=\"Enter the type of pedastal needed\"\r\n                    label=\"tall/short\"\r\n                    onChange={handleChange('pedestals')}\r\n                    defaultValue={values.pedestals}\r\n                    margin=\"normal\"\r\n                    fullWidth=\"true\"\r\n                  />\r\n                  <br />\r\n                  <TextField\r\n                    placeholder=\"Please specify another other requests\"\r\n                    label=\"e.g extra tables/chairs\"\r\n                    onChange={handleChange('otherRequests')}\r\n                    defaultValue={values.otherRequests}\r\n                    margin=\"normal\"\r\n                    fullWidth=\"true\"\r\n                  />\r\n                  <br />\r\n                  <Button\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={this.continue}\r\n                  >Continue</Button>\r\n                </Dialog>\r\n              </React.Fragment>\r\n            </MuiThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    button: {margin: 15}\r\n}\r\nexport default FormRequestDetails\r\n","import React, { Component } from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\r\nimport { List, ListItem, ListItemText } from '@material-ui/core/';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\n\r\nexport class FormRequestDetails extends Component {\r\n\r\n    continue = e => {\r\n        e.preventDefault();\r\n        console.log(\"submitting to server\");\r\n\r\n\r\n        var url = '';\r\n        if (window.location.host == \"localhost:5000\") {\r\n          url = \"http://\" + window.location.host;\r\n        }\r\n        else {\r\n          url = \"https://\" + window.location.host;\r\n        }\r\n        //To post data to the server\r\n        axios.post(url + \"/user/request\", this.props.values).then(response => {\r\n          console.log('submitted to server');\r\n          console.log(response.data);\r\n        }).catch(err => {\r\n          throw err;\r\n        });\r\n\r\n        // PROCESS FORM VIA API//\r\n        this.props.nextStep();\r\n    }\r\n    back = e => {\r\n        e.preventDefault();\r\n        // PROCESS FORM VIA API//\r\n        this.props.prevStep();\r\n    }\r\n\r\n    render() {\r\n        const { \r\n            values: {\r\n            typeOfPrototype,\r\n            showcaseSpaceNeeded,\r\n            dimensionOfPrototype,\r\n            noOfPowerPoints,\r\n            pedestals,\r\n            otherRequests\r\n            }\r\n        } = this.props;\r\n\r\n        return (\r\n            <MuiThemeProvider >\r\n              <React.Fragment>\r\n                <Dialog \r\n                  open=\"true\"\r\n                  fullWidth=\"true\"\r\n                  maxWidth='sm'\r\n                >\r\n                    <AppBar>Confirm</AppBar>\r\n                    <List>\r\n                        <ListItem>\r\n                        <ListItemText primary=\"Type of prototype\" secondary={typeOfPrototype} /> \r\n                        </ListItem>\r\n                        <ListItem>\r\n                        <ListItemText primary=\"Required space for showcase\" secondary={showcaseSpaceNeeded} /> \r\n                        </ListItem>\r\n                        <ListItem>\r\n                        <ListItemText primary=\"Physical dimension of prototype\" secondary={dimensionOfPrototype} /> \r\n                        </ListItem>\r\n                        <ListItem>\r\n                        <ListItemText primary=\"Required number of power points\" secondary={noOfPowerPoints} /> \r\n                        </ListItem>\r\n                        <ListItem>\r\n                        <ListItemText primary=\"Required number of pedestals\" secondary={pedestals} /> \r\n                        </ListItem>\r\n                        <ListItem>\r\n                        <ListItemText primary=\"Other requests\" secondary={otherRequests} /> \r\n                        </ListItem>\r\n                    </List>\r\n                    <br />\r\n                  <Button\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={this.continue}\r\n                  >Continue</Button>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={this.back}\r\n                  >Back</Button>\r\n                </Dialog>\r\n              </React.Fragment>\r\n            </MuiThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    button: {margin: 15}\r\n}\r\nexport default FormRequestDetails\r\n","import React, { Component } from 'react'\r\nimport FormRequestDetails from './FormRequestDetails';\r\nimport Confirm from './Confirm';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport class UserForm extends Component {\r\n    state = {\r\n        step: 1,\r\n        typeOfPrototype: '',\r\n        showcaseSpaceNeeded: '',\r\n        dimensionOfPrototype: '',\r\n        noOfPowerPoints: '',\r\n        pedestals: '',\r\n        otherRequests: ''\r\n    };\r\n\r\n    // Proceed to next step\r\n    nextStep = () => {\r\n        const { step } = this.state;\r\n        this.setState({step: step + 1});\r\n    };\r\n\r\n    // Proceed to previous step\r\n    prevStep = () => {\r\n        const { step } = this.state;\r\n        this.setState({step: step - 1});\r\n    };\r\n\r\n    //Handle fields change\r\n    handleChange = input => e => {\r\n        this.setState({[input]: e.target.value});\r\n    };\r\n\r\n    buttonClick = () => {\r\n        var url = \"\";\r\n        if (window.location.host == \"localhost:5000\") {\r\n            url = \"http://\" + window.location.host + \"/user\";\r\n        }\r\n        else {\r\n            url = \"https://\" + window.location.host + \"/user\";\r\n        }\r\n        window.location = url;\r\n    }\r\n\r\n    render() {\r\n        const { step } = this.state;\r\n        const { typeOfPrototype, showcaseSpaceNeeded, dimensionOfPrototype, \r\n        noOfPowerPoints, pedestals, otherRequests} = this.state;\r\n        const values = { typeOfPrototype, showcaseSpaceNeeded, dimensionOfPrototype,\r\n        noOfPowerPoints, pedestals, otherRequests};\r\n        \r\n        switch(step) {\r\n            case 1:\r\n                return (\r\n                    <FormRequestDetails\r\n                        nextStep = {this.nextStep}\r\n                        handleChange = {this.handleChange}\r\n                        values = {values}\r\n                    />\r\n                )\r\n            case 2:\r\n                return (\r\n                    <Confirm \r\n                        nextStep={this.nextStep}\r\n                        prevStep={this.prevStep}\r\n                        values={values}\r\n                        />\r\n                )\r\n            case 3:\r\n                return (\r\n                    <div>\r\n                        <h1>Success</h1>\r\n                        <Button onClick={this.buttonClick}>Back To Home Page</Button>\r\n                    </div>\r\n                    \r\n                )\r\n        }\r\n    }\r\n}\r\n\r\nexport default UserForm\r\n","import React from 'react';\nimport UserForm from './Components/UserForm'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <UserForm/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}